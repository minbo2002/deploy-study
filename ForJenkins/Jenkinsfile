pipeline{
    agent any

    stages {

       stage('Prepare') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/minbo2002/deploy-study.git'
            }

            post {

                success {
                    echo 'prepare success'
                }

                always {
                    echo 'done prepare'
                }

                cleanup {
                    echo 'after all other post conditions'
                }
            }
        }

        stage('Build Gradle') {
            steps{
                sh 'chmod +x gradlew'
                sh  './gradlew clean build -x test'

                sh 'ls -al ./build'
            }
        }
        stage('Docker build image'){
            steps{
                sh 'docker build -t minbo2002/docker-test .'
            }
        }
        stage('Docker push image') {
            steps {
                withCredentials([string(credentialsId: 'dockerHubPwd', variable: 'dockerHubPwd')]) {
                    sh "docker login -u minbo2002 -p ${dockerHubPwd}"
                }
                sh 'docker push minbo2002/docker-test'
            }

            post {
                success {
                    echo 'success'
                }

                failure {
                    echo 'failed'
                }
            }
        }
        stage('Run Container on SSH Dev Server'){
            steps{
                echo 'SSH'
                sshagent (credentials: ['worker-server']) {
                	  sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.13.153 'whoami'"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.13.153 'docker ps -q --filter name=docker-test | grep -q . && docker rm -f \$(docker ps -aq --filter name=docker-test)'"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.13.153 'docker rmi -f minbo2002/docker-test'"
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.13.153 'docker run -d --name docker-test -p 8080:8080 minbo2002/docker-test'"
                }

            }

        }

    }
}